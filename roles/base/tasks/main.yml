---

- name: Load settings based on distribution
  include_vars: "{{ item }}"
  with_first_found:
    - "sys_{{ ansible_distribution }}.yml"
    - "sys_{{ ansible_os_family }}.yml"

- name: Manage DNS Settings
  block:
    - name: Tell NM to not care about DNS Settings
      ini_file:
        path: /etc/NetworkManager/NetworkManager.conf
        section: main
        option: dns
        value: none
      register: nm_config
    - name: Restart NM
      service:
        name: NetworkManager
        state: restarted
      when: nm_config.changed
    - name: Configure DNS Resolution
      template:
        src: resolv.conf
        dest: /etc/resolv.conf
        owner: root
        group: root
        mode: 0644
  when:
    - playbook_test_mode is not defined
    - ansible_os_family == 'RedHat'
    - nameservers is defined
  tags: dns

# do not merge with next item, since epel need to be installed first
- name: "Install Epel (CentOS)"
  package:
    name: epel-release
    state: present
  when: ansible_distribution == 'CentOS' and ansible_distribution_major_version|int >= 7

# cannot use 'yum copr' as yum-plugin-copr is missing on CentOS despite Copr's doc
# also there is no Ansible module for it
- name: setup the OSAS Infra repo
  yum_repository:
    name: osas_infra
    description: Copr repo for OSAS ComInfra Team
    baseurl: "https://copr-be.cloud.fedoraproject.org/results/duck/osas-infra-team-rpm-repo/{{ rpm_repo_component }}/"
    gpgkey: "https://copr-be.cloud.fedoraproject.org/results/duck/osas-infra-team-rpm-repo/pubkey.gpg"
    repo_gpgcheck: False
    gpgcheck: True
    skip_if_unavailable: True
    state: present
    enabled: True
  when: ansible_os_family == 'RedHat'
  notify: Clean YUM Metadata

- name: "Enable Extra RPM Repository"
  when: ansible_distribution == 'CentOS' and ansible_distribution_major_version|int >= 8
  block:
    - name: "Test if certain repository config exist"
      stat:
        path: "/etc/yum.repos.d/{{ item }}.repo"
      loop:
        - CentOS-Linux-PowerTools
        - CentOS-Stream-PowerTools
      register: yum_repo_files

    # needed for needrestart at least
    - name: "Enable PowerTools RPM Repository"
      # noqa risky-file-permissions
      ini_file:
        path: "/etc/yum.repos.d/{{ item.item }}.repo"
        section: powertools
        option: enabled
        value: '1'
        create: no
      when: item.stat.exists
      loop: "{{ yum_repo_files.results }}"
      loop_control:
        label: "{{ item.item }}"

# after all repos are setup and before installing packages
- meta: flush_handlers

- name: install base rpms
  package: pkg={{ item }} state=present
  with_items:
    - screen
    - htop
    - iftop
    - iotop
    - strace
    - vim-enhanced
    - tcpdump
    - lsof
    - needrestart
    - dialog   # useful for debconf and in turn needrestart

- name: Install specific needrestart config
  copy:
    src: needrestart_osas.conf
    dest: /etc/needrestart/conf.d/50_osas.conf
    owner: root
    group: root
    mode: 0644

- name: Test if the host is an AWS instance
  stat: path=/etc/cloud/cloud.cfg.d
  register: cloud_init

- name: Preserve AWS instance hostname
  copy:
    dest: /etc/cloud/cloud.cfg.d/06_preserve_hostname.cfg
    src: 06_preserve_hostname.cfg
    owner: root
    group: root
    mode: 0644
  when: cloud_init.stat.isdir is defined and cloud_init.stat.isdir

- block:
    - name: install firewalld if available
      package:
        pkg: firewalld
        state: installed
    - name: work around cloud image who disable firewalld
      systemd:
        name: firewalld
        masked: no
        enabled: yes   # one of 'state' or 'enabled' is compulsory
      when: ansible_distribution == 'Fedora'
    - name: start firewalld service
      service:
        name: firewalld
        state: started
        enabled: yes
  when: ansible_distribution == 'Fedora' or (ansible_os_family == 'RedHat' and ansible_distribution_major_version|int >= 7)

- name: Start Firewalld
  service: name=firewalld state=started enabled=yes
  when: ansible_distribution == 'Fedora' or ansible_distribution_major_version == '7'
